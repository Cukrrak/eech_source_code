// 
// 	 Enemy Engaged RAH-66 Comanche Versus KA-52 Hokum
// 	 Copyright (C) 2000 Empire Interactive (Europe) Ltd,
// 	 677 High Road, North Finchley, London N12 0DA
// 
// 	 Please see the document LICENSE.TXT for the full licence agreement
// 
// 2. LICENCE
//  2.1 	
//  	Subject to the provisions of this Agreement we now grant to you the 
//  	following rights in respect of the Source Code:
//   2.1.1 
//   	the non-exclusive right to Exploit  the Source Code and Executable 
//   	Code on any medium; and 
//   2.1.2 
//   	the non-exclusive right to create and distribute Derivative Works.
//  2.2 	
//  	Subject to the provisions of this Agreement we now grant you the
// 	following rights in respect of the Object Code:
//   2.2.1 
// 	the non-exclusive right to Exploit the Object Code on the same
// 	terms and conditions set out in clause 3, provided that any
// 	distribution is done so on the terms of this Agreement and is
// 	accompanied by the Source Code and Executable Code (as
// 	applicable).
// 
// 3. GENERAL OBLIGATIONS
//  3.1 
//  	In consideration of the licence granted in clause 2.1 you now agree:
//   3.1.1 
// 	that when you distribute the Source Code or Executable Code or
// 	any Derivative Works to Recipients you will also include the
// 	terms of this Agreement;
//   3.1.2 
// 	that when you make the Source Code, Executable Code or any
// 	Derivative Works ("Materials") available to download, you will
// 	ensure that Recipients must accept the terms of this Agreement
// 	before being allowed to download such Materials;
//   3.1.3 
// 	that by Exploiting the Source Code or Executable Code you may
// 	not impose any further restrictions on a Recipient's subsequent
// 	Exploitation of the Source Code or Executable Code other than
// 	those contained in the terms and conditions of this Agreement;
//   3.1.4 
// 	not (and not to allow any third party) to profit or make any
// 	charge for the Source Code, or Executable Code, any
// 	Exploitation of the Source Code or Executable Code, or for any
// 	Derivative Works;
//   3.1.5 
// 	not to place any restrictions on the operability of the Source 
// 	Code;
//   3.1.6 
// 	to attach prominent notices to any Derivative Works stating
// 	that you have changed the Source Code or Executable Code and to
// 	include the details anddate of such change; and
//   3.1.7 
//   	not to Exploit the Source Code or Executable Code otherwise than
// 	as expressly permitted by  this Agreement.
// 



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef unsigned short int rgb_packed;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct REAL_COLOUR
{

	//
	// The following union makes copying between a D3DCOLOR structure a simple memory move.
	//

	union
	{

		struct
		{

			struct
			{

				union
				{

					unsigned char
						blue,
						b;
				};
			};

			struct
			{

				union
				{

					unsigned char
						green,
						g;
				};
			};

			struct
			{

				union
				{

					unsigned char
						red,
						r;
				};
			};

			union
			{

				union
				{

					unsigned char
						f,
						a,
						fog,
						alpha;
				};
			};
		};

		unsigned int
			colour;
	};
};

typedef struct REAL_COLOUR real_colour;

typedef struct REAL_COLOUR rgb_colour;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define set_rgb_colour(COL,R,G,B,A) (COL).r = (R); (COL).g = (G); (COL).b = (B); (COL).a = (A);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern rgb_colour
	sys_col_black,
	sys_col_blue,
	sys_col_green,
	sys_col_cyan,
	sys_col_red,
	sys_col_magenta,
	sys_col_yellow,
	sys_col_white,
	sys_col_sky_blue,
	sys_col_slate_grey,
	sys_col_forest_green,
	sys_col_ultramarine,
	sys_col_seablue,
	sys_col_aquamarine,
	sys_col_gold,
	sys_col_light_grey,
	sys_col_light_red,
	sys_col_dark_red,
	sys_col_dark_green,
	sys_col_dark_blue,
	sys_col_medium_blue,
	sys_col_medium_red,
	sys_col_sandy_brown,
	sys_col_amber,
	sys_col_waypoint_route,
	sys_col_red_force,
	sys_col_blue_force;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum SYS_COLOURS
{

	COLOUR_BLACK,
	COLOUR_BLUE,
	COLOUR_GREEN,
	COLOUR_CYAN,
	COLOUR_RED,
	COLOUR_MAGENTA,
	COLOUR_YELLOW,
	COLOUR_WHITE,
	COLOUR_SKY_BLUE,
	COLOUR_SLATE_GREY,
	COLOUR_FOREST_GREEN,
	COLOUR_ULTRAMARINE,
	COLOUR_SEABLUE,
	COLOUR_AQUAMARINE,
	COLOUR_GOLD,
	COLOUR_LIGHT_GREY,
	COLOUR_LIGHT_RED,
	COLOUR_DARK_RED,
	COLOUR_DARK_GREEN,
	COLOUR_DARK_BLUE,
	COLOUR_MEDIUM_BLUE,
	COLOUR_MEDIUM_RED,
	COLOUR_SANDY_BROWN,
	COLOUR_AMBER,
	COLOUR_WAYPOINT_ROUTE,
	COLOUR_RED_FORCE,
	COLOUR_BLUE_FORCE,
	NUM_SYS_COLOURS
};

typedef enum SYS_COLOURS sys_colours;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern rgb_colour
	*sys_colour_table [];

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern char
	*sys_colour_names [];

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern void initialise_graphics_colours ( void );

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
