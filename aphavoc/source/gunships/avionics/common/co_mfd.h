//
// 	 Enemy Engaged RAH-66 Comanche Versus KA-52 Hokum
// 	 Copyright (C) 2000 Empire Interactive (Europe) Ltd,
// 	 677 High Road, North Finchley, London N12 0DA
//
// 	 Please see the document LICENSE.TXT for the full licence agreement
//
// 2. LICENCE
//  2.1
//  	Subject to the provisions of this Agreement we now grant to you the
//  	following rights in respect of the Source Code:
//   2.1.1
//   	the non-exclusive right to Exploit  the Source Code and Executable
//   	Code on any medium; and
//   2.1.2
//   	the non-exclusive right to create and distribute Derivative Works.
//  2.2
//  	Subject to the provisions of this Agreement we now grant you the
// 	following rights in respect of the Object Code:
//   2.2.1
// 	the non-exclusive right to Exploit the Object Code on the same
// 	terms and conditions set out in clause 3, provided that any
// 	distribution is done so on the terms of this Agreement and is
// 	accompanied by the Source Code and Executable Code (as
// 	applicable).
//
// 3. GENERAL OBLIGATIONS
//  3.1
//  	In consideration of the licence granted in clause 2.1 you now agree:
//   3.1.1
// 	that when you distribute the Source Code or Executable Code or
// 	any Derivative Works to Recipients you will also include the
// 	terms of this Agreement;
//   3.1.2
// 	that when you make the Source Code, Executable Code or any
// 	Derivative Works ("Materials") available to download, you will
// 	ensure that Recipients must accept the terms of this Agreement
// 	before being allowed to download such Materials;
//   3.1.3
// 	that by Exploiting the Source Code or Executable Code you may
// 	not impose any further restrictions on a Recipient's subsequent
// 	Exploitation of the Source Code or Executable Code other than
// 	those contained in the terms and conditions of this Agreement;
//   3.1.4
// 	not (and not to allow any third party) to profit or make any
// 	charge for the Source Code, or Executable Code, any
// 	Exploitation of the Source Code or Executable Code, or for any
// 	Derivative Works;
//   3.1.5
// 	not to place any restrictions on the operability of the Source
// 	Code;
//   3.1.6
// 	to attach prominent notices to any Derivative Works stating
// 	that you have changed the Source Code or Executable Code and to
// 	include the details anddate of such change; and
//   3.1.7
//   	not to Exploit the Source Code or Executable Code otherwise than
// 	as expressly permitted by  this Agreement.
//



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum MFD_MODES
{
	MFD_MODE_OFF,
	MFD_MODE_DAMAGED,
	MFD_MODE_GROUND_RADAR,
	MFD_MODE_AIR_RADAR,
	MFD_MODE_FLIR,
	MFD_MODE_DTV,
	MFD_MODE_DVO,
	MFD_MODE_LLLTV,
	MFD_MODE_TSD,
	MFD_MODE_TSD_WPT,
	MFD_MODE_TSD_UTIL,
	MFD_MODE_TSD_RTE,
	MFD_MODE_TSD_THRT,
	MFD_MODE_TSD_COORD,
	MFD_MODE_TSD_SHOW,
	MFD_MODE_TSD_ZONE,
	MFD_MODE_ASE,
	MFD_MODE_VCR,
	MFD_MODE_WEAPON,
	MFD_MODE_WEAPON_GUN,
	MFD_MODE_WEAPON_MSL,
	MFD_MODE_WEAPON_ATA,
	MFD_MODE_WEAPON_RKT,
	MFD_MODE_LASER_CHANNEL,
	MFD_MODE_LASER_CODE,
	MFD_MODE_LASER_FREQUENCY,
	MFD_MODE_SYSTEM,
	MFD_MODE_ENGINE,
	MFD_MODE_FLIGHT,
	MFD_MODE_FUEL,
	MFD_MODE_MENU,
	MFD_MODE_CHECKLIST,
	MFD_MODE_CHECKLIST_THROUGH_FLIGHT,
	MFD_MODE_CHECKLIST_PERF_DATA1,
	MFD_MODE_CHECKLIST_PERF_DATA2,
	MFD_MODE_ADF,
	NUM_MFD_MODES
};

typedef enum MFD_MODES mfd_modes;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum MFD_LOCATIONS
{
	MFD_LOCATION_LHS,
	MFD_LOCATION_PILOT_LHS = MFD_LOCATION_LHS,
	MFD_LOCATION_RHS,
	MFD_LOCATION_PILOT_RHS = MFD_LOCATION_RHS,
	MFD_LOCATION_CPG_LHS,
	MFD_LOCATION_CPG_RHS,
	MFD_LOCATION_ORT,
	NUM_MFD_LOCATIONS
};

typedef enum MFD_LOCATIONS mfd_locations;

#define MFD_LOCATION_DONT_CARE	((mfd_locations)-1)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern int
	display_mfd_layout_grid;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern const char
	*mfd_mode_names[NUM_MFD_MODES];

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern screen
	*very_large_eo_3d_texture_screen,
	*large_eo_3d_texture_screen,
	*small_eo_3d_texture_screen;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern float
	pointer_position_x,
	pointer_position_y;

extern float
	clicked_position_x,
	clicked_position_y;

extern void update_pointer_position (void);
extern void store_point_left_event (event* ev);
extern void store_point_right_event (event* ev);
extern int is_holding_left_button (void);
extern int is_holding_right_button (void);
extern void reset_mfd_mouse_buttons(void);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern void initialise_common_mfd (void);

extern void deinitialise_common_mfd (void);

extern void initialise_common_mfd_3d_textures (void);

extern void deinitialise_common_mfd_3d_textures (void);

extern void draw_symbology_to_texture(screen* full_mfd_texture_screen,
	texture_index_numbers texture_index,
	int texture_width, int texture_height,
	int x_min, int y_min, int x_max, int y_max,
	rgb_colour colour, rgb_colour background_colour,
	void (*draw_symbols_function)(int));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float get_low_altitude_warning_limit(void);
void set_low_altitude_warning_limit(float limit);

float get_high_altitude_warning_limit(void);
void set_high_altitude_warning_limit(float limit);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
